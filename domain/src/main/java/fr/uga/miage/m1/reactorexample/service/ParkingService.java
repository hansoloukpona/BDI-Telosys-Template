/*
 * Created on 2025-01-30 ( 11:28:43 )
 * Generated by Telosys ( https://www.telosys.org/ ) version 3.3.0
 */
package domain.src.main.java.fr.uga.miage.m1.reactorexample.service;



import fr.uga.miage.m1.reactorexample.api.ParkingServicePort;
import fr.uga.miage.m1.reactorexample.exception.data.ParkingEntityAlreadyExist;
import fr.uga.miage.m1.reactorexample.exception.data.ParkingEntityNotFoundException;
import fr.uga.miage.m1.reactorexample.exception.domain.ParkingCreationException;
import fr.uga.miage.m1.reactorexample.exception.domain.ParkingNotFoundException;
import fr.uga.miage.m1.reactorexample.models.Parking;
import fr.uga.miage.m1.reactorexample.models.ParkingToCreate;
import fr.uga.miage.m1.reactorexample.port.ParkingDataPort;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.math.BigDecimal;
import java.util.List;

/**
 * Service for entity "Parking" <br>
 * 
 * This service provides all the necessary operations required by the REST controller <br>
 * 
 * @author Telosys & kakaprout for m1miage2025
 *
 */

@Service
@RequiredArgsConstructor
public class ParkingService implements ParkingServicePort {
    private final ParkingDataPort parkingDataPort;

    @Override
    public Mono<Parking> create(ParkingToCreate parkingToCreate) {
        return parkingDataPort.createParking(parkingToCreate)
                .onErrorMap(ParkingEntityAlreadyExist.class, ex -> new ParkingCreationException(ex.getMessage()))
                .flatMap(Mono::just);
    }

        @Override
    public Mono<Parking> getParking(String idparking) {
        return parkingDataPort.findById(idparking)
                .onErrorMap(ParkingEntityNotFoundException.class, ex -> new ParkingNotFoundException(ex.getMessage()));
    }
    
    @Override
    public Flux<Parking> getAll() {
        return parkingDataPort.findAll();
    }
}

